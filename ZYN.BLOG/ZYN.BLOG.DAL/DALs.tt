<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
 <#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\ZYN.BLOG.Model\BlogModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ZYN.BLOG.Model;

namespace ZYN.BLOG.DAL
{
    /// <summary>
    /// 各子DAL需要实现自己的I<>DAL，同时继承BaseDAL以便拥有各子DAL共有的CURD
    /// </summary>
<#
// Emit Entity Types
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);
    
#>
	public partial class <#=entity.Name#>DAL : BaseDAL<ZYN.BLOG.Model.<#=entity.Name#>>, IDAL.I<#=entity.Name#>DAL
    {
	    public override void SetDbContext()
		{
			 dbContext = new BlogDb4ZynEntities();
			 dbContext.Configuration.ValidateOnSaveEnabled = false;
		}
    }

<#}#>

}