<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);
string inputFile = @"..\ZYN.BLOG.Model\BlogModel.edmx";
EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ZYN.BLOG.IBLL;

namespace ZYN.BLOG.BLL
{
	public partial class ServiceSession : ZYN.BLOG.IBLL.IServiceSession
    {
<#
int version=0;
// Emit Entity Types
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);
    version++;
#>
		#region <#=version.ToString("00") #> 业务接口 I<#=entity.Name#>Service (实际为类 依赖接口)
		I<#=entity.Name#>Service _<#=entity.Name#>Service;
		public I<#=entity.Name#>Service <#=entity.Name#>Service
		{
			get
			{
				if(_<#=entity.Name#>Service == null)
					_<#=entity.Name#>Service = new <#=entity.Name#>Service();
				return _<#=entity.Name#>Service;
			}
			set
			{
				_<#=entity.Name#>Service = value;
			}
		}
		#endregion

<#}#>
    }

}